edn = form + WS* ;


<form> = built-in
       / number
       /  ( atom
          | list
          | object
          | vector
          | keyword
          | WS* form 
          | dispatched-form 
          | comment 
          )
       ;

<atom> = symbol | string | character;

character = "\\" ((!#"[A-Za-z]{2}" #"[A-Za-z]") | "newline" | "space" | "return" | "tab") ;

<number> = floating-point | integer;

integer =  !floating-point #'[+\-]?[0-9]+' ; 

(*
floating-point = int "M" 
               | int frac
               | int exp
               | int frac exp
               ;
*)

(* integer = #'[+\-]?[0-9]+' ; *)

floating-point = #'[+\-]?[1-9][0-9]*\.[0-9]+N?'  (* frac *)
               | #'[+\-]?[1-9][0-9]*[Ee][+\-]?[0-9]+N?' (* exp *)
               | #'[+\-]?[1-9][0-9]*\.[0-9]+[Ee]?[+\-]?[0-9]+N?' (* frac exp *)
               ;

frac = "." #"[0-9]+" ;

exp = #"[Ee][+-]?" ;

string = #'("[^"\\]*(?:\\.[^"\\]*)*")' ; 

<built-in> = boolean | nil ;

boolean = "true" | "false" ;

nil = "nil" ;

keyword = ":" identifier ;

dispatched-form = "#" dispatch-modifier? form ;

dispatch-modifier = discard | tagged ;

discard = "_"

tagged = symbol;

vector =  "[" form* "]"  ;

list = "(" form* ")" ;

object =  "{"  pair* "}"  ;

<pair> = key val ;

key = form ;

val = form ;

comment = ";" #"[^\n]+" "\n"? ;

<letters> = #"[A-Za-z]+" ; (* a conventional start *)

symbol = identifier
       | namespaced-symbol ;

(* <identifier> = prefix-character all-id-chars
                / non-numeric non-numeric all-id-chars 
                /  non-numeric non-numeric
                / non-numeric
                ; 

<non-numeric> =  #"[A-Za-z.*+!\-_?$%&=]" ;
<prefix-character> =  #"[A-Za-z*!\_?$%&=]" ;
<all-id-chars> = #"[0-9A-Za-z.*+!\-_?$%&=]+" ;

while correct, this is highly ambiguous and doesn't parse well, hence:
 
*)

<identifier> = #"[A-Za-z*!\_?$%&=][0-9A-Za-z.*+!\-_?$%&=]*" 
             | #"[A-Za-z.*+!\-_?$%&=][A-Za-z.*+!\-_?$%&=]*[0-9A-Za-z.*+!\-_?$%&=]*"

namespaced-symbol = namespace "/" name ;

name = identifier ;

namespace = identifier ;


(* #"[A-Za-z.*+!\-_?$%&=]" *) 
(*
symbol = symbol "." symbol 
       | symbol "/" symbol
       | symbol "." symbol "/" symbol
       | letters
       ;
*)
<WS> = #"[\s,]+"	 ; (* commas are whitespace *)